class Solution {
public:
    string convert(string s, int numRows) {
        if (numRows == 1 || s.length() <= numRows) return s;

        vector<string> rows(numRows);
        int currRow = 0;
        bool goingDown = false;

        for (char c : s) {
            rows[currRow] += c;

            // Change direction if weâ€™re at the top or bottom
            if (currRow == 0 || currRow == numRows - 1)
                goingDown = !goingDown;

            currRow += goingDown ? 1 : -1;
        }

        // Combine all rows
        string result;
        for (string row : rows) {
            result += row;
        }

        return result;
    }
    int main() {
    Solution sol;

    cout << sol.convert("PAYPALISHIRING", 3) << endl;  // Output: "PAHNAPLSIIGYIR"
    cout << sol.convert("PAYPALISHIRING", 4) << endl;  // Output: "PINALSIGYAHRPI"
    cout << sol.convert("A", 1) << endl;               // Output: "A"

    return 0;
}

};
